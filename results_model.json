{"n": {"3": 2.0928282688306497, "5": 1.359653909085072, "7": 1.154391482120831, "9": 1.091550676739305}, "best": {"n": 9, "Test Perplexity": 1.1207932526191533, "Ground Truth": "public void estTransactionBindsTheHandle ( ) hrows Exception { TransactionStuff xl = EOD . onDemand ( dbi , TransactionStuff . class ) ; TransactionStuff x2 = EOD . onDemand ( dbi , TransactionStuff . class ) ; xl . insert ( 8 , \" Mike \" ) ; xl . begin ( ) ; assertSame ( xl . getHandle ( ) , xl . getHandle ( ) ) ; xl . updateName ( 8 , \" Miker \" ) ; assertEquals ( \" Miker \" , xl . byId ( 8 ) . getName ( ) ) ; assertEquals ( \" Mike \" , x2 . byId ( 8 ) . getName ( ) ) ; xl . commit ( ) ; assertNotSame ( xl . getHandle ( ) , xl . getHandle ( ) ) ; assertEquals ( \" Miker \" , x2 . byId ( 8 ) . getName ( ) ) ; } ", "Context Window": ["public", "void", "estTransactionBindsTheHandle", "(", ")", "hrows", "Exception", "{"], "Prediction": "<beg> public void estTransactionBindsTheHandle ( ) hrows Exception { TransactionStuff xl = SqlObjectBuilder . attach ( handle , TransactionStuff . class ) ; xl . insert ( 8 , \" Mike \" ) ; xl . begin ( ) ; xl . updateName ( 8 , \" Miker \" ) ; assertEquals ( \" Miker \" , xl . byId ( 8 ) . getName ( ) ) ; xl . commit ( ) ; assertNotSame ( xl . getHandle ( ) , xl . getHandle ( ) ) ; xl . updateName ( 8 , \" Miker \" ) ; assertEquals ( \" Miker \" , xl . <end>"}}