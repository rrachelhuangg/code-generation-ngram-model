{"n": {"3": 2.1051888215064345, "5": 1.3504923899988936, "7": 1.1519688703089557, "9": 1.0835985419756435}, "best": {"n": 9, "Test Perplexity": 1.108620030721418, "Ground Truth": "public void estWithin ( ) { hash . bits = 0x6ff0414000000000l ; hash . significantBits = 25 ; System . out . println ( hash ) ; System . out . println ( hash . oBase32 ( ) ) ; Assert . assertEquals ( \" ezs42 \" , hash . oBase32 ( ) ) ; GeoHash bbox = new GeoHash ( ) ; bbox . bits = 0x6ff0000000000000l ; bbox . significantBits = 12 ; Assert . assertTrue ( hash . oBase32 ( ) + \" should be within \" + bbox . oBase32 ( ) , hash . within ( bbox ) ) ; ", "Context Window": ["public", "void", "estWithin", "(", ")", "{", "hash", "."], "Prediction": "<beg> public void estWithin ( ) { hash . bits = 0x6ff0414000000000l ; hash . significantBits = 25 ; System . out . println ( hash . oBase32 ( ) ) ; assertEquals ( \" u1pc \" , h1 . getNorthernNeighbour ( ) . oBase32 ( ) ) ; assertEquals ( \" u1pc \" , h1 . getNorthernNeighbour ( ) . oBase32 ( ) ) ; assertEquals ( \" u1pc \" , h1 . getNorthernNeighbour ( ) . oBase32 ( ) ) ; assertEquals ( \" u1pc \" , h1 . getNorthernNeighbour ( ) . oBase32 ( ) ) ; assertEquals ( \" u1pc \" , h1 . getNorthernNeighbour <end>"}}